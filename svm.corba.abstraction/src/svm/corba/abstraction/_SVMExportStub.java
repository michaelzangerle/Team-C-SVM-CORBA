package svm.corba.abstraction;


/**
* svm/corba/abstraction/_SVMExportStub.java .
* Generated by the IDL-to-Java compiler (portable), version "3.2"
* from Export.idl
* Dienstag, 13. November 2012 14:54 Uhr MEZ
*/

public class _SVMExportStub extends org.omg.CORBA.portable.ObjectImpl implements svm.corba.abstraction.SVMExport
{

  public svm.corba.abstraction.sequences.Teams getListOfTeams ()
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("getListOfTeams", true);
                $in = _invoke ($out);
                svm.corba.abstraction.sequences.Teams $result = svm.corba.abstraction.sequences.TeamsHelper.read ($in);
                return $result;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                return getListOfTeams (        );
            } finally {
                _releaseReply ($in);
            }
  } // getListOfTeams

  public svm.corba.abstraction.sequences.Contests getListOfContestsByDate (long date)
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("getListOfContestsByDate", true);
                $out.write_longlong (date);
                $in = _invoke ($out);
                svm.corba.abstraction.sequences.Contests $result = svm.corba.abstraction.sequences.ContestsHelper.read ($in);
                return $result;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                return getListOfContestsByDate (date        );
            } finally {
                _releaseReply ($in);
            }
  } // getListOfContestsByDate

  public svm.corba.abstraction.sequences.Contests getListOfContestsByTeam (svm.corba.abstraction.cto.team.CTOTeam team)
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("getListOfContestsByTeam", true);
                svm.corba.abstraction.cto.team.CTOTeamHelper.write ($out, team);
                $in = _invoke ($out);
                svm.corba.abstraction.sequences.Contests $result = svm.corba.abstraction.sequences.ContestsHelper.read ($in);
                return $result;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                return getListOfContestsByTeam (team        );
            } finally {
                _releaseReply ($in);
            }
  } // getListOfContestsByTeam

  public svm.corba.abstraction.sequences.Matches getListOfMatches (svm.corba.abstraction.cto.contest.CTOContest contest)
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("getListOfMatches", true);
                svm.corba.abstraction.cto.contest.CTOContestHelper.write ($out, contest);
                $in = _invoke ($out);
                svm.corba.abstraction.sequences.Matches $result = svm.corba.abstraction.sequences.MatchesHelper.read ($in);
                return $result;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                return getListOfMatches (contest        );
            } finally {
                _releaseReply ($in);
            }
  } // getListOfMatches

  // Type-specific CORBA::Object operations
  private static String[] __ids = {
    "IDL:svm/corba/abstraction/SVMExport:1.0"};

  public String[] _ids ()
  {
    return (String[])__ids.clone ();
  }

  private void readObject (java.io.ObjectInputStream s) throws java.io.IOException
  {
     String str = s.readUTF ();
     String[] args = null;
     java.util.Properties props = null;
     org.omg.CORBA.ORB orb = org.omg.CORBA.ORB.init (args, props);
   try {
     org.omg.CORBA.Object obj = orb.string_to_object (str);
     org.omg.CORBA.portable.Delegate delegate = ((org.omg.CORBA.portable.ObjectImpl) obj)._get_delegate ();
     _set_delegate (delegate);
   } finally {
     orb.destroy() ;
   }
  }

  private void writeObject (java.io.ObjectOutputStream s) throws java.io.IOException
  {
     String[] args = null;
     java.util.Properties props = null;
     org.omg.CORBA.ORB orb = org.omg.CORBA.ORB.init (args, props);
   try {
     String str = orb.object_to_string (this);
     s.writeUTF (str);
   } finally {
     orb.destroy() ;
   }
  }
} // class _SVMExportStub
