#ifndef _CTO
    #include <cto/CTO.idl>
    #define _CTO
#endif

module svm { module corba { module abstraction {
    module sequences {
        struct Teams {
            sequence<cto::team::CTOTeam> teams;
        };
        struct Contests {
            sequence<cto::contest::CTOContest> contests;
        };
        struct Matches {
            sequence<cto::match::CTOMatch> matches;
        };
    };
    module cto {
        module team {
            interface CTOTeam : CTO {

            };
        };
        module contest {
            interface CTOContest : CTO {

            };
        };
        module match {
            interface CTOMatch : CTO {

            };
        };
    };
    interface SVMExport {
        sequences::Teams getListOfTeams();
        sequences::Contests getListOfContests(in long long date);
        sequences::Contests getListOfContests(in cto::CTOTeam team);
        sequences::Matches getListOfMatches(in cto::CTOContest contest);
    };
}; }; };