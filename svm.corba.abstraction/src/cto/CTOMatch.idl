#ifndef _CTO
    #include <cto/CTO.idl>
    #define _CTO
#endif
#ifndef _CTOContactDetails
      #include <cto/CTOContactDetails.idl>
      #define _CTOContactDetails
#endif
#ifndef _CTOMatchType
      #include <cto/CTOMatchType.idl>
      #define _CTOMatchType
#endif
#ifndef _CTOTeam
      #include <cto/CTOTeam.idl>
      #define _CTOTeam
#endif
#ifndef _LogicException
    #include <exceptions/LogicException.idl>
    #define _LogicException
#endif

module svm { module corba { module abstraction {
    module cto { module match {
        interface CTOMatch : CTO {

            readonly attribute string name;
            readonly attribute long long startDate;
            readonly attribute long long endDate;
            readonly attribute boolean canceled;
            readonly attribute string description;
            readonly attribute string remarks;
            readonly attribute long resultAway;
            readonly attribute long resultHome;
            cto::team::CTOTeam getHomeTeam() raises (exceptions::LogicException);
            cto::team::CTOTeam getAwayTeam() raises (exceptions::LogicException);
            cto::matchType::CTOMatchType getMatchType()  raises (exceptions::LogicException);
            cto::contactDetails::CTOContactDetails getContactDetails() raises (exceptions::LogicException);

        };
    }; };
}; }; };